// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: stanza/hub/v1/stream.proto

package hubv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateStreamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuardName   string           `protobuf:"bytes,1,opt,name=guard_name,json=guardName,proto3" json:"guard_name,omitempty"`
	Environment string           `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	Requests    []*StreamRequest `protobuf:"bytes,3,rep,name=requests,proto3" json:"requests,omitempty"`
	Ended       []string         `protobuf:"bytes,4,rep,name=ended,proto3" json:"ended,omitempty"` // IDs of streams that have completed
}

func (x *UpdateStreamsRequest) Reset() {
	*x = UpdateStreamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stanza_hub_v1_stream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStreamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStreamsRequest) ProtoMessage() {}

func (x *UpdateStreamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stanza_hub_v1_stream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStreamsRequest.ProtoReflect.Descriptor instead.
func (*UpdateStreamsRequest) Descriptor() ([]byte, []int) {
	return file_stanza_hub_v1_stream_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateStreamsRequest) GetGuardName() string {
	if x != nil {
		return x.GuardName
	}
	return ""
}

func (x *UpdateStreamsRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *UpdateStreamsRequest) GetRequests() []*StreamRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *UpdateStreamsRequest) GetEnded() []string {
	if x != nil {
		return x.Ended
	}
	return nil
}

type UpdateStreamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*StreamResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *UpdateStreamsResponse) Reset() {
	*x = UpdateStreamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stanza_hub_v1_stream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStreamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStreamsResponse) ProtoMessage() {}

func (x *UpdateStreamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stanza_hub_v1_stream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStreamsResponse.ProtoReflect.Descriptor instead.
func (*UpdateStreamsResponse) Descriptor() ([]byte, []int) {
	return file_stanza_hub_v1_stream_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateStreamsResponse) GetResults() []*StreamResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type StreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feature       string `protobuf:"bytes,1,opt,name=feature,proto3" json:"feature,omitempty"`                                         // optional
	Tags          []*Tag `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`                                               // optional
	PriorityBoost *int32 `protobuf:"varint,3,opt,name=priority_boost,json=priorityBoost,proto3,oneof" json:"priority_boost,omitempty"` // optional
	// Unique identifier for this stream - may be meaningful or a UUID.
	StreamId string `protobuf:"bytes,4,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	// Maximum weight that may be allocated to this stream
	MaxWeight float32 `protobuf:"fixed32,5,opt,name=max_weight,json=maxWeight,proto3" json:"max_weight,omitempty"`
	// Minimum weight that may be allocated to this stream. If this weight cannot be allocated then the stream cannot be served.
	MinWeight float32 `protobuf:"fixed32,6,opt,name=min_weight,json=minWeight,proto3" json:"min_weight,omitempty"`
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stanza_hub_v1_stream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stanza_hub_v1_stream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_stanza_hub_v1_stream_proto_rawDescGZIP(), []int{2}
}

func (x *StreamRequest) GetFeature() string {
	if x != nil {
		return x.Feature
	}
	return ""
}

func (x *StreamRequest) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *StreamRequest) GetPriorityBoost() int32 {
	if x != nil && x.PriorityBoost != nil {
		return *x.PriorityBoost
	}
	return 0
}

func (x *StreamRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamRequest) GetMaxWeight() float32 {
	if x != nil {
		return x.MaxWeight
	}
	return 0
}

func (x *StreamRequest) GetMinWeight() float32 {
	if x != nil {
		return x.MinWeight
	}
	return 0
}

type StreamResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for this stream - may be meaningful or a UUID.
	StreamId string `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	// Weight allocated to this stream. Zero means it was not allocated.
	AllocatedWeight float32 `protobuf:"fixed32,2,opt,name=allocated_weight,json=allocatedWeight,proto3" json:"allocated_weight,omitempty"`
}

func (x *StreamResult) Reset() {
	*x = StreamResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stanza_hub_v1_stream_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResult) ProtoMessage() {}

func (x *StreamResult) ProtoReflect() protoreflect.Message {
	mi := &file_stanza_hub_v1_stream_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResult.ProtoReflect.Descriptor instead.
func (*StreamResult) Descriptor() ([]byte, []int) {
	return file_stanza_hub_v1_stream_proto_rawDescGZIP(), []int{3}
}

func (x *StreamResult) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamResult) GetAllocatedWeight() float32 {
	if x != nil {
		return x.AllocatedWeight
	}
	return 0
}

var File_stanza_hub_v1_stream_proto protoreflect.FileDescriptor

var file_stanza_hub_v1_stream_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x74, 0x61, 0x6e, 0x7a, 0x61, 0x2f, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x74,
	0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x73, 0x74, 0x61, 0x6e,
	0x7a, 0x61, 0x2f, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0a, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x67, 0x75, 0x61, 0x72, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x74, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x22, 0x4e, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x0d, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2a,
	0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a,
	0x6d, 0x61, 0x78, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x32, 0x91, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12,
	0x23, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x42, 0xaf, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x74, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x42, 0x0b,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x37, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x74, 0x61, 0x6e, 0x7a, 0x61,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x7a, 0x61, 0x2f, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x31,
	0x3b, 0x68, 0x75, 0x62, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x48, 0x58, 0xaa, 0x02, 0x0d, 0x53,
	0x74, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x48, 0x75, 0x62, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x53,
	0x74, 0x61, 0x6e, 0x7a, 0x61, 0x5c, 0x48, 0x75, 0x62, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x53,
	0x74, 0x61, 0x6e, 0x7a, 0x61, 0x5c, 0x48, 0x75, 0x62, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x53, 0x74, 0x61, 0x6e, 0x7a,
	0x61, 0x3a, 0x3a, 0x48, 0x75, 0x62, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_stanza_hub_v1_stream_proto_rawDescOnce sync.Once
	file_stanza_hub_v1_stream_proto_rawDescData = file_stanza_hub_v1_stream_proto_rawDesc
)

func file_stanza_hub_v1_stream_proto_rawDescGZIP() []byte {
	file_stanza_hub_v1_stream_proto_rawDescOnce.Do(func() {
		file_stanza_hub_v1_stream_proto_rawDescData = protoimpl.X.CompressGZIP(file_stanza_hub_v1_stream_proto_rawDescData)
	})
	return file_stanza_hub_v1_stream_proto_rawDescData
}

var file_stanza_hub_v1_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_stanza_hub_v1_stream_proto_goTypes = []interface{}{
	(*UpdateStreamsRequest)(nil),  // 0: stanza.hub.v1.UpdateStreamsRequest
	(*UpdateStreamsResponse)(nil), // 1: stanza.hub.v1.UpdateStreamsResponse
	(*StreamRequest)(nil),         // 2: stanza.hub.v1.StreamRequest
	(*StreamResult)(nil),          // 3: stanza.hub.v1.StreamResult
	(*Tag)(nil),                   // 4: stanza.hub.v1.Tag
}
var file_stanza_hub_v1_stream_proto_depIdxs = []int32{
	2, // 0: stanza.hub.v1.UpdateStreamsRequest.requests:type_name -> stanza.hub.v1.StreamRequest
	3, // 1: stanza.hub.v1.UpdateStreamsResponse.results:type_name -> stanza.hub.v1.StreamResult
	4, // 2: stanza.hub.v1.StreamRequest.tags:type_name -> stanza.hub.v1.Tag
	0, // 3: stanza.hub.v1.StreamBalancerService.UpdateStreams:input_type -> stanza.hub.v1.UpdateStreamsRequest
	1, // 4: stanza.hub.v1.StreamBalancerService.UpdateStreams:output_type -> stanza.hub.v1.UpdateStreamsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_stanza_hub_v1_stream_proto_init() }
func file_stanza_hub_v1_stream_proto_init() {
	if File_stanza_hub_v1_stream_proto != nil {
		return
	}
	file_stanza_hub_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_stanza_hub_v1_stream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStreamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stanza_hub_v1_stream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStreamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stanza_hub_v1_stream_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stanza_hub_v1_stream_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_stanza_hub_v1_stream_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stanza_hub_v1_stream_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stanza_hub_v1_stream_proto_goTypes,
		DependencyIndexes: file_stanza_hub_v1_stream_proto_depIdxs,
		MessageInfos:      file_stanza_hub_v1_stream_proto_msgTypes,
	}.Build()
	File_stanza_hub_v1_stream_proto = out.File
	file_stanza_hub_v1_stream_proto_rawDesc = nil
	file_stanza_hub_v1_stream_proto_goTypes = nil
	file_stanza_hub_v1_stream_proto_depIdxs = nil
}
